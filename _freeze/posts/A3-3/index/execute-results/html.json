{
  "hash": "ad490eff5c5cc74a1005f475ad3cd828",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Chhota-Bheem-Doraemon-Dragon-Tales\"\nauthor: \"Anusha\"\n---\n\n\n\n# **Chhota Bheem vs Doraemon vs Dragon Tale**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\nlibrary(broom)\nlibrary(crosstable)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(knitr)\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(supernova)\nlibrary(ggprism)\nlibrary(patchwork)\nlibrary(infer)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n```\n\n\n:::\n:::\n\n\n\nLet's first import and read our data set.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncartoon <- read_csv(\"../../Data/doraemon.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\nRows: 90 Columns: 5\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(3): Participant ID, Gender, Cartoon dbl (1): Rating lgl (1): ...5\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...5`\n```\n\n\n:::\n\n```{.r .cell-code}\ncartoon\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 90 × 5\n   `Participant ID` Gender Cartoon     Rating ...5 \n   <chr>            <chr>  <chr>        <dbl> <lgl>\n 1 P1               Male   Chota Bheem    8.5 NA   \n 2 P2               Male   Chota Bheem    6   NA   \n 3 P3               Male   Chota Bheem    8   NA   \n 4 P4               Male   Chota Bheem    7   NA   \n 5 P5               Male   Chota Bheem    8   NA   \n 6 P6               Male   Chota Bheem   10   NA   \n 7 P7               Male   Chota Bheem    5   NA   \n 8 P8               Male   Chota Bheem    7.8 NA   \n 9 P9               Male   Chota Bheem    8.5 NA   \n10 P10              Male   Chota Bheem    5   NA   \n# ℹ 80 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(cartoon)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n            name     class levels  n missing\n1 Participant ID character     90 90       0\n2         Gender character      2 90       0\n3        Cartoon character      3 90       0\n4           ...5   logical      0  0      90\n                                   distribution\n1 P1 (1.1%), P10 (1.1%), P11 (1.1%) ...        \n2 Female (50%), Male (50%)                     \n3 Chota Bheem (33.3%), Doraemon (33.3%) ...    \n4  (%)                                         \n\nquantitative variables:  \n    name   class min Q1 median Q3 max     mean       sd  n missing\n1 Rating numeric   1  6      7  8  10 7.062222 1.939627 90       0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(cartoon)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 90\nColumns: 5\n$ `Participant ID` <chr> \"P1\", \"P2\", \"P3\", \"P4\", \"P5\", \"P6\", \"P7\", \"P8\", \"P9\",…\n$ Gender           <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male…\n$ Cartoon          <chr> \"Chota Bheem\", \"Chota Bheem\", \"Chota Bheem\", \"Chota B…\n$ Rating           <dbl> 8.5, 6.0, 8.0, 7.0, 8.0, 10.0, 5.0, 7.8, 8.5, 5.0, 7.…\n$ ...5             <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n```\n\n\n:::\n:::\n\n\n\n## Data Munging\n\nLet us convert Gender and Cartoon as a factor since we perform calculations on these variables.\n\nWe are prepping our data for various test we are going to perform.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncartoon2 <- cartoon %>% \n  mutate(\n    Gender = as_factor(Gender),\n    Cartoon = as_factor(Cartoon)\n  )\nglimpse(cartoon2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 90\nColumns: 5\n$ `Participant ID` <chr> \"P1\", \"P2\", \"P3\", \"P4\", \"P5\", \"P6\", \"P7\", \"P8\", \"P9\",…\n$ Gender           <fct> Male, Male, Male, Male, Male, Male, Male, Male, Male,…\n$ Cartoon          <fct> Chota Bheem, Chota Bheem, Chota Bheem, Chota Bheem, C…\n$ Rating           <dbl> 8.5, 6.0, 8.0, 7.0, 8.0, 10.0, 5.0, 7.8, 8.5, 5.0, 7.…\n$ ...5             <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n```\n\n\n:::\n:::\n\n\n\n## What is our NULL Hypothesis for this data set?\n\n\"**Doraemon \\>\\> Dragon Tales \\>\\> Chhota Bheem!\"**\n\nTo test our hypothesis, we will perform a series of steps. This will lead us to a conclusion regarding what we have stated.\n\nSo, first we will find out the mean and standard deviation of money spent across the 2 genders.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncartoon2 %>% crosstable(Rating~Cartoon) %>% as_flextable()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-3361449e{table-layout:auto;}.cl-335c830a{font-family:'Helvetica';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-335c831e{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-335e63be{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-335e63c8{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-335e79d0{background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-335e79d1{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-335e79da{background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-335e79db{background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-335e79e4{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-3361449e'><thead><tr style=\"overflow-wrap:break-word;\"><th  rowspan=\"2\"class=\"cl-335e79d0\"><p class=\"cl-335e63be\"><span class=\"cl-335c830a\">label</span></p></th><th  rowspan=\"2\"class=\"cl-335e79d0\"><p class=\"cl-335e63be\"><span class=\"cl-335c830a\">variable</span></p></th><th  colspan=\"3\"class=\"cl-335e79d1\"><p class=\"cl-335e63be\"><span class=\"cl-335c830a\">Cartoon</span></p></th></tr><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-335e79da\"><p class=\"cl-335e63be\"><span class=\"cl-335c830a\">Chota Bheem</span></p></th><th class=\"cl-335e79da\"><p class=\"cl-335e63be\"><span class=\"cl-335c830a\">Doraemon</span></p></th><th class=\"cl-335e79da\"><p class=\"cl-335e63be\"><span class=\"cl-335c830a\">Dragon Tales</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"4\"class=\"cl-335e79db\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">Rating</span></p></td><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">Min / Max</span></p></td><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">3.0 / 10.0</span></p></td><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">1.0 / 10.0</span></p></td><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">1.0 / 10.0</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">Med [IQR]</span></p></td><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">6.4 [6.0;8.0]</span></p></td><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">8.0 [6.0;9.0]</span></p></td><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">7.0 [6.1;8.4]</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">Mean (std)</span></p></td><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">6.7 (1.5)</span></p></td><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">7.2 (2.3)</span></p></td><td class=\"cl-335e79e4\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">7.3 (2.0)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-335e79db\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">N (NA)</span></p></td><td class=\"cl-335e79db\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">30 (0)</span></p></td><td class=\"cl-335e79db\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">30 (0)</span></p></td><td class=\"cl-335e79db\"><p class=\"cl-335e63c8\"><span class=\"cl-335c831e\">30 (0)</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\nDragon Tales has the highest mean of 7.3.\n\nThe median ratings suggest that while Doraemon has a higher average, the median rating is similar to Dragon Tales indicating that most viewers rated both cartoons fairly similarly.\n\nDoraemon has the highest standard deviation of 2.3, indicating a wider range of ratings. This could mean that opinions on Doraemon vary significantly among viewers compared to the others.\n\nChota Bheem has the lowest standard deviation of 1.5, suggesting that ratings for this cartoon are more clustered around the mean.\n\n## Histogram\n\n1.  A\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~Rating, fill = ~Cartoon, data = cartoon2) %>% \n  gf_facet_wrap(vars(Cartoon)) %>% \n  gf_labs(title = \"Which cartoon has the highest rating?\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n1.  B\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~Rating, fill = ~Cartoon, position = \"dodge\", data = cartoon2) %>% \n  gf_labs(title = \"Which cartoon has the highest rating?\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nAccording to this visualization, seemingly Doraemon has higher ratings of 10, compared to the other 2 cartoons.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~Rating, fill = ~Gender, position = \"dodge\", data = cartoon2) %>% \n  gf_facet_wrap(vars(Cartoon)) %>% \n  gf_labs(title = \"Does Gender play a role in these ratings?\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\nBoth males and females gave more ratings of 10 to doraemon.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~Rating, fill = ~Cartoon, position = \"dodge\", data = cartoon2) %>% \n  gf_facet_wrap(vars(Gender)) %>% \n  gf_labs(title = \"Does Gender play a role in these ratings?\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\nThis graph tells us that males prefer Doraemon more than females, since they have given more ratings of 10 to it.\n\n## Box Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_boxplot(\n  data = cartoon2,\n  Rating ~ Cartoon,\n  alpha = 0.5\n) %>%\n  gf_vline(xintercept = ~ mean(Rating)) %>%\n  gf_labs(\n    title = \"Boxplots of Ratings vs Cartoon\",\n    x = \"Cartoon\", y = \"Rating\",\n    caption = \"Using ggprism\"\n  ) %>%\n  gf_refine(\n    scale_x_discrete(guide = \"prism_bracket\"),\n    guides(fill = guide_legend(title = \"Gender\"))\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The S3 guide system was deprecated in ggplot2 3.5.0.\nℹ It has been replaced by a ggproto system that can be extended.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\nThe wider box of Doraemon shows that there more varied opinions about the cartoon. The higher median line also suggests that people have rated Doraemon more favourabley.\n\nAlso since the boxes have significant overlap, the ratings don't vary that vastly.\n\n## ANOVA\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncartoon_anova <- aov(Rating ~ Cartoon, data = cartoon2)\ncartoon_anova\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\n   aov(formula = Rating ~ Cartoon, data = cartoon2)\n\nTerms:\n                 Cartoon Residuals\nSum of Squares    6.9269  327.9047\nDeg. of Freedom        2        87\n\nResidual standard error: 1.941396\nEstimated effects may be unbalanced\n```\n\n\n:::\n:::\n\n\n\nThese results suggest that there are differences in the ratings of the cartoons. However, to determine whether these differences are significant, we conduct another test. To further explore these differences, we will conduct Bonferroni correction, to identify which specific cartoons differ from each other in terms of ratings.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsupernova::pairwise(cartoon_anova,\n  correction = \"Bonferroni\", # Try \"Tukey\"\n  alpha = 0.05, # 95% CI calculation\n  var_equal = TRUE, \n  plot = TRUE\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Pairwise t-tests with Bonferroni correction ─────────────────────────────────\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nModel: Rating ~ Cartoon\n```\n\n\n:::\n\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCartoon\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLevels: 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFamily-wise error-rate: 0.049\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  group_1      group_2      diff pooled_se     t    df  lower upper  p_adj\n  <chr>        <chr>       <dbl>     <dbl> <dbl> <int>  <dbl> <dbl>  <dbl>\n1 Doraemon     Chota Bheem 0.580     0.354 1.636    87 -0.186 1.346  .3161\n2 Dragon Tales Chota Bheem 0.597     0.354 1.683    87 -0.170 1.363  .2877\n3 Dragon Tales Doraemon    0.017     0.354 0.047    87 -0.750 0.783 1.0000\n```\n\n\n:::\n:::\n\n\n\nThis shows that Doraemon is rated differently than the other 2 cartoons.\n\nBut since there seems to a lot of overlap, we cannot say that there is a significant difference of ratings between each cartoon.\n\n### Check for Normality\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshapiro.test(x = cartoon2$Rating)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  cartoon2$Rating\nW = 0.93517, p-value = 0.0002269\n```\n\n\n:::\n:::\n\n\n\nSince, p value is really small, the distribution is not normal.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncartoon2 %>%\n  group_by(Cartoon) %>%\n  group_modify(~ .x %>%\n    select(Rating) %>%\n    as_vector() %>%\n    shapiro.test() %>%\n    broom::tidy())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n# Groups:   Cartoon [3]\n  Cartoon      statistic p.value method                     \n  <fct>            <dbl>   <dbl> <chr>                      \n1 Chota Bheem      0.951  0.185  Shapiro-Wilk normality test\n2 Doraemon         0.909  0.0139 Shapiro-Wilk normality test\n3 Dragon Tales     0.918  0.0240 Shapiro-Wilk normality test\n```\n\n\n:::\n:::\n\n\n\nAccording to this test, the distribution for Chhota Bheem seems to be kind of normally distributed. But, the distribution for the other 2 cartoons is not normal because of the smaller p values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncartoon2 %>%\n  as_tibble() %>%\n  gf_dhistogram(~Rating, data = .) %>%\n  gf_fitdistr()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\nThe ratings appear to be spread across with several peaks, indicating that the data may not follow a simple normal distribution. This seems right with the results of the Shapiro-Wilk test, which suggested that the data is not normally distributed.\n\nThe density curve provides an estimation of the data’s distribution.\n\n## ANOVA using Permutation Test\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobserved_infer <- cartoon2 %>%\n  specify(Rating ~ Cartoon) %>%\n  hypothesise(null = \"independence\") %>%\n  calculate(stat = \"F\")\nobserved_infer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: Rating (numeric)\nExplanatory: Cartoon (factor)\nNull Hypothesis: independence\n# A tibble: 1 × 1\n   stat\n  <dbl>\n1 0.919\n```\n\n\n:::\n:::\n\n\n\nWe have calculated the F stats for our cartoon2 distribution.\n\nThe F-stat of 0.9 suggests that there is little to no difference in the means of the ratings of cartoons being compared.\n\nAfter this, we perform the permutation test.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_dist_infer <- cartoon2 %>%\n  specify(Rating ~ Cartoon) %>%\n  hypothesise(null = \"independence\") %>%\n  generate(reps = 4999, type = \"permute\") %>%\n  calculate(stat = \"F\")\n##\nnull_dist_infer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: Rating (numeric)\nExplanatory: Cartoon (factor)\nNull Hypothesis: independence\n# A tibble: 4,999 × 2\n   replicate   stat\n       <int>  <dbl>\n 1         1 1.13  \n 2         2 0.369 \n 3         3 0.792 \n 4         4 2.10  \n 5         5 0.185 \n 6         6 0.0179\n 7         7 0.878 \n 8         8 0.318 \n 9         9 1.77  \n10        10 1.42  \n# ℹ 4,989 more rows\n```\n\n\n:::\n:::\n\n\n\nThis null distribution allows us to evaluate the stance of the F-stat value. By comparing the observed F-stat to this null distribution, we can assess how unusual or extreme it is.\n\nThe distribution across all 4,999 samples show the overall spread of F-values under the null hypothesis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##\nnull_dist_infer %>%\n  visualise(method = \"simulation\") +\n  shade_p_value(obs_stat = observed_infer$stat, direction = \"right\") +\n  scale_x_continuous(trans = \"log10\", expand = c(0, 0)) +\n  coord_cartesian(xlim = c(0.2, 500), clip = \"off\") +\n  annotation_logticks(outside = FALSE) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in transformation$transform(x): NaNs produced\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in scale_x_continuous(trans = \"log10\", expand = c(0, 0)): log-10\ntransformation introduced infinite values.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n## *Conclusion:*\n\nThe observed test statistic for the ratings of *Doraemon*, *Chhota Bheem*, and *Dragon Tales* is on the rightward tail end of the distribution but not entirely outside it. There may be some difference in ratings among the cartoons, though the evidence is not strong.\n\nWe cannot completely reject the null hypothesis. But we could say that the ratings of Doraemon might not really be that much higher than the other 2 cartoons.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/tabwid-1.1.3/tabwid.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}