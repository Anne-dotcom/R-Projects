{
  "hash": "3588198484cbe27b03b12bb8aa21924b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day-2 (Summaries)\"\nauthor: \"Anusha\"\n---\n\n\n\n## Introduction\n\nToday, I am working on Data Summaries. We are throwing away data to consolidate and summarize it.\n\n### *Day-2 (27th Sept)*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:skimr':\n\n    n_missing\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(knitr)\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(babynames)\nlibrary(ggformula)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# ℹ 224 more rows\n```\n\n\n:::\n:::\n\n\n\nFirst 10 rows of the data set.\n\n> We use 'head' to get the first few elements in the data set.\n>\n> Similarly, 'tail' is used to get the last few elements in the data set.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n```\n\n\n:::\n:::\n\n\n\n> Glimpse is a function in dplyr which is a part of the tidyverse package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 234\nColumns: 11\n$ manufacturer <chr> \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        <chr> \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        <dbl> 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         <int> 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          <int> 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        <chr> \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          <int> 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           <chr> \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        <chr> \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n```\n\n\n:::\n:::\n\n\n\n> Inspect is a function in the package mosaic.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n          name     class levels   n missing\n1 manufacturer character     15 234       0\n2        model character     38 234       0\n3        trans character     10 234       0\n4          drv character      3 234       0\n5           fl character      5 234       0\n6        class character      7 234       0\n                                   distribution\n1 dodge (15.8%), toyota (14.5%) ...            \n2 caravan 2wd (4.7%) ...                       \n3 auto(l4) (35.5%), manual(m5) (24.8%) ...     \n4 f (45.3%), 4 (44%), r (10.7%)                \n5 r (71.8%), p (22.2%), e (3.4%) ...           \n6 suv (26.5%), compact (20.1%) ...             \n\nquantitative variables:  \n   name   class    min     Q1 median     Q3  max        mean       sd   n\n1 displ numeric    1.6    2.4    3.3    4.6    7    3.471795 1.291959 234\n2  year integer 1999.0 1999.0 2003.5 2008.0 2008 2003.500000 4.509646 234\n3   cyl integer    4.0    4.0    6.0    8.0    8    5.888889 1.611534 234\n4   cty integer    9.0   14.0   17.0   19.0   35   16.858974 4.255946 234\n5   hwy integer   12.0   18.0   24.0   27.0   44   23.440171 5.954643 234\n  missing\n1       0\n2       0\n3       0\n4       0\n5       0\n```\n\n\n:::\n:::\n\n\n\n> skim is function in skimr package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(mpg)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |mpg  |\n|Number of rows           |234  |\n|Number of columns        |11   |\n|_______________________  |     |\n|Column type frequency:   |     |\n|character                |6    |\n|numeric                  |5    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|manufacturer  |         0|             1|   4|  10|     0|       15|          0|\n|model         |         0|             1|   2|  22|     0|       38|          0|\n|trans         |         0|             1|   8|  10|     0|       10|          0|\n|drv           |         0|             1|   1|   1|     0|        3|          0|\n|fl            |         0|             1|   1|   1|     0|        5|          0|\n|class         |         0|             1|   3|  10|     0|        7|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|   sd|     p0|    p25|    p50|    p75| p100|hist  |\n|:-------------|---------:|-------------:|-------:|----:|------:|------:|------:|------:|----:|:-----|\n|displ         |         0|             1|    3.47| 1.29|    1.6|    2.4|    3.3|    4.6|    7|▇▆▆▃▁ |\n|year          |         0|             1| 2003.50| 4.51| 1999.0| 1999.0| 2003.5| 2008.0| 2008|▇▁▁▁▇ |\n|cyl           |         0|             1|    5.89| 1.61|    4.0|    4.0|    6.0|    8.0|    8|▇▁▇▁▇ |\n|cty           |         0|             1|   16.86| 4.26|    9.0|   14.0|   17.0|   19.0|   35|▆▇▃▁▁ |\n|hwy           |         0|             1|   23.44| 5.95|   12.0|   18.0|   24.0|   27.0|   44|▅▅▇▁▁ |\n\n\n:::\n:::\n\n\n\n> Now, we change cyl, fl, drv, class and trans from an int to an ordinal variable called factor.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_modified <- mpg %>%\n  dplyr::mutate(\n    cyl = as_factor(cyl),\n    fl = as_factor(fl),\n    drv = as_factor(drv),\n    class = as_factor(class),\n    trans = as_factor(trans)\n  )\nglimpse(mpg_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 234\nColumns: 11\n$ manufacturer <chr> \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        <chr> \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        <dbl> 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         <int> 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          <fct> 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        <fct> auto(l5), manual(m5), manual(m6), auto(av), auto(l5), man…\n$ drv          <fct> f, f, f, f, f, f, f, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, r, …\n$ cty          <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          <int> 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           <fct> p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, r, …\n$ class        <fct> compact, compact, compact, compact, compact, compact, com…\n```\n\n\n:::\n:::\n\n\n\n#### Trying out with a different set!  \n\nI imported the library \"babynames\" from the previous class.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   <dbl> <chr> <chr>     <int>  <dbl>\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows\n```\n\n\n:::\n:::\n\n\n\nConverting 'sex' into an ordinal variable, factor.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames_modified <- babynames %>%\n  dplyr::mutate(\n    sex = as_factor(sex),\n  )\nglimpse(babynames_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,924,665\nColumns: 5\n$ year <dbl> 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880,…\n$ sex  <fct> F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F,…\n$ name <chr> \"Mary\", \"Anna\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\",…\n$ n    <int> 7065, 2604, 2003, 1939, 1746, 1578, 1472, 1414, 1320, 1288, 1258,…\n$ prop <dbl> 0.07238359, 0.02667896, 0.02052149, 0.01986579, 0.01788843, 0.016…\n```\n\n\n:::\n:::\n\n\n\n> Glimpse:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(babynames_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,924,665\nColumns: 5\n$ year <dbl> 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880, 1880,…\n$ sex  <fct> F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F,…\n$ name <chr> \"Mary\", \"Anna\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\",…\n$ n    <int> 7065, 2604, 2003, 1939, 1746, 1578, 1472, 1414, 1320, 1288, 1258,…\n$ prop <dbl> 0.07238359, 0.02667896, 0.02052149, 0.01986579, 0.01788843, 0.016…\n```\n\n\n:::\n:::\n\n\n\n> Inspect:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(babynames_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n  name     class levels       n missing\n1  sex    factor      2 1924665       0\n2 name character  97310 1924665       0\n                                   distribution\n1 F (59.1%), M (40.9%)                         \n2 Francis (0%), James (0%) ...                 \n\nquantitative variables:  \n  name   class      min        Q1    median        Q3          max         mean\n1 year numeric 1.88e+03 1.951e+03 1.985e+03 2.003e+03 2.017000e+03 1.974851e+03\n2    n integer 5.00e+00 7.000e+00 1.200e+01 3.200e+01 9.968600e+04 1.808733e+02\n3 prop numeric 2.26e-06 3.870e-06 7.300e-06 2.288e-05 8.154561e-02 1.362963e-04\n            sd       n missing\n1 3.402948e+01 1924665       0\n2 1.533337e+03 1924665       0\n3 1.151693e-03 1924665       0\n```\n\n\n:::\n:::\n\n\n\n> Skim:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(babynames_modified)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                   |\n|:------------------------|:------------------|\n|Name                     |babynames_modified |\n|Number of rows           |1924665            |\n|Number of columns        |5                  |\n|_______________________  |                   |\n|Column type frequency:   |                   |\n|character                |1                  |\n|factor                   |1                  |\n|numeric                  |3                  |\n|________________________ |                   |\n|Group variables          |None               |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|name          |         0|             1|   2|  15|     0|    97310|          0|\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts            |\n|:-------------|---------:|-------------:|:-------|--------:|:---------------------|\n|sex           |         0|             1|FALSE   |        2|F: 1138293, M: 786372 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|      sd|   p0|  p25|  p50|  p75|     p100|hist  |\n|:-------------|---------:|-------------:|-------:|-------:|----:|----:|----:|----:|--------:|:-----|\n|year          |         0|             1| 1974.85|   34.03| 1880| 1951| 1985| 2003|  2017.00|▁▂▃▅▇ |\n|n             |         0|             1|  180.87| 1533.34|    5|    7|   12|   32| 99686.00|▇▁▁▁▁ |\n|prop          |         0|             1|    0.00|    0.00|    0|    0|    0|    0|     0.08|▇▁▁▁▁ |\n\n\n:::\n:::\n\n\n\n### Coming back to mpg data set...\n\nGroups and Summaries of Quantitative Variables\n\n> Grouping by cyl:\n>\n> -   As the cyl increases, the average highway mileage reduces.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_modified %>%\n  group_by(cyl) %>%\n  summarize(average_hwy = mean(hwy), count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  cyl   average_hwy count\n  <fct>       <dbl> <int>\n1 4            28.8    81\n2 5            28.8     4\n3 6            22.8    79\n4 8            17.6    70\n```\n\n\n:::\n:::\n\n\n\n> Grouping by cy and fl (here, fl is fuel):\n>\n> -   All combinations of both cyl and fl together.\n>\n> -   There are 4 levels of cyl and 5 levels of fl. So, there should be 20 combinations. But it is not 20 because certain cars do not have it.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_modified %>%\n  group_by(cyl, fl) %>%\n  summarize(average_hwy = mean(hwy), count = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'cyl'. You can override using the `.groups`\nargument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 4\n# Groups:   cyl [4]\n   cyl   fl    average_hwy count\n   <fct> <fct>       <dbl> <int>\n 1 4     p            27.8    22\n 2 4     r            28.3    55\n 3 4     d            43       3\n 4 4     c            36       1\n 5 5     r            28.8     4\n 6 6     p            25.3    17\n 7 6     r            22.2    60\n 8 6     e            17       1\n 9 6     d            22       1\n10 8     p            20.8    13\n11 8     r            17.5    49\n12 8     e            12.7     7\n13 8     d            17       1\n```\n\n\n:::\n:::\n\n\n\n> Grouping by manufacturer:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% group_by(manufacturer) %>% summarize(mean_mileage_Manuf = mean(hwy))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 2\n   manufacturer mean_mileage_Manuf\n   <chr>                     <dbl>\n 1 audi                       26.4\n 2 chevrolet                  21.9\n 3 dodge                      17.9\n 4 ford                       19.4\n 5 honda                      32.6\n 6 hyundai                    26.9\n 7 jeep                       17.6\n 8 land rover                 16.5\n 9 lincoln                    17  \n10 mercury                    18  \n11 nissan                     24.6\n12 pontiac                    26.4\n13 subaru                     25.6\n14 toyota                     24.9\n15 volkswagen                 29.2\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% group_by(manufacturer) %>% summarize(mean_mileage_Manuf2 = mean(cty))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 2\n   manufacturer mean_mileage_Manuf2\n   <chr>                      <dbl>\n 1 audi                        17.6\n 2 chevrolet                   15  \n 3 dodge                       13.1\n 4 ford                        14  \n 5 honda                       24.4\n 6 hyundai                     18.6\n 7 jeep                        13.5\n 8 land rover                  11.5\n 9 lincoln                     11.3\n10 mercury                     13.2\n11 nissan                      18.1\n12 pontiac                     17  \n13 subaru                      19.3\n14 toyota                      18.5\n15 volkswagen                  20.9\n```\n\n\n:::\n:::\n\n\n\n### Math Anxiety Data set\n\n> -   AMAS (Adult Manifest Anxiety Scale)\n>\n> -    RCMAS (Revised Children's Manifest Anxiety Scale)\n>\n> -    Arith (Arithmetic Subtest of Intelligence Tests)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety <- read_delim(file = \"../../Data/MathAnxiety.csv\", delim = \";\" )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 599 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (2): Gender, Grade\ndbl (3): AMAS, RCMAS, Arith\nnum (1): Age\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nmath_anxiety\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 599 × 6\n     Age Gender Grade      AMAS RCMAS Arith\n   <dbl> <chr>  <chr>     <dbl> <dbl> <dbl>\n 1  1378 Boy    Secondary     9    20     6\n 2  1407 Boy    Secondary    18     8     6\n 3  1379 Girl   Secondary    23    26     5\n 4  1428 Girl   Secondary    19    18     7\n 5  1356 Boy    Secondary    23    20     1\n 6  1350 Girl   Secondary    27    33     1\n 7  1336 Boy    Secondary    22    23     4\n 8  1393 Boy    Secondary    17    11     7\n 9  1317 Girl   Secondary    28    32     2\n10  1348 Boy    Secondary    20    30     6\n# ℹ 589 more rows\n```\n\n\n:::\n:::\n\n\n\n> Glimpse:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(math_anxiety)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 599\nColumns: 6\n$ Age    <dbl> 1378, 1407, 1379, 1428, 1356, 1350, 1336, 1393, 1317, 1348, 141…\n$ Gender <chr> \"Boy\", \"Boy\", \"Girl\", \"Girl\", \"Boy\", \"Girl\", \"Boy\", \"Boy\", \"Gir…\n$ Grade  <chr> \"Secondary\", \"Secondary\", \"Secondary\", \"Secondary\", \"Secondary\"…\n$ AMAS   <dbl> 9, 18, 23, 19, 23, 27, 22, 17, 28, 20, 16, 20, 21, 36, 16, 27, …\n$ RCMAS  <dbl> 20, 8, 26, 18, 20, 33, 23, 11, 32, 30, 10, 4, 23, 26, 24, 21, 3…\n$ Arith  <dbl> 6, 6, 5, 7, 1, 1, 4, 7, 2, 6, 2, 5, 2, 6, 2, 7, 2, 4, 7, 3, 8, …\n```\n\n\n:::\n:::\n\n\n\n> Inspect:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(math_anxiety)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n    name     class levels   n missing\n1 Gender character      2 599       0\n2  Grade character      2 599       0\n                                   distribution\n1 Boy (53.9%), Girl (46.1%)                    \n2 Primary (66.9%), Secondary (33.1%)           \n\nquantitative variables:  \n   name   class min     Q1 median     Q3  max       mean         sd   n missing\n1   Age numeric  37 1061.5   1208 1418.5 1875 1246.49249 223.112183 599       0\n2  AMAS numeric   4   18.0     22   26.5   45   21.98164   6.597962 599       0\n3 RCMAS numeric   1   14.0     19   25.0   41   19.24040   7.566802 599       0\n4 Arith numeric   0    4.0      6    7.0    8    5.30217   2.105220 599       0\n```\n\n\n:::\n:::\n\n\n\n> Skim:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(math_anxiety)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |             |\n|:------------------------|:------------|\n|Name                     |math_anxiety |\n|Number of rows           |599          |\n|Number of columns        |6            |\n|_______________________  |             |\n|Column type frequency:   |             |\n|character                |2            |\n|numeric                  |4            |\n|________________________ |             |\n|Group variables          |None         |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Gender        |         0|             1|   3|   4|     0|        2|          0|\n|Grade         |         0|             1|   7|   9|     0|        2|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|     sd| p0|    p25|  p50|    p75| p100|hist  |\n|:-------------|---------:|-------------:|-------:|------:|--:|------:|----:|------:|----:|:-----|\n|Age           |         0|             1| 1246.49| 223.11| 37| 1061.5| 1208| 1418.5| 1875|▁▁▇▇▃ |\n|AMAS          |         0|             1|   21.98|   6.60|  4|   18.0|   22|   26.5|   45|▂▆▇▃▁ |\n|RCMAS         |         0|             1|   19.24|   7.57|  1|   14.0|   19|   25.0|   41|▂▇▇▅▁ |\n|Arith         |         0|             1|    5.30|   2.11|  0|    4.0|    6|    7.0|    8|▂▃▃▇▇ |\n\n\n:::\n:::\n\n\n\n> Converting certain variables into ordinal variables, that is factors.\n>\n> -   Converting 'Gender' and 'Grade' as factors.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_modified <- math_anxiety %>%\n  dplyr::mutate(\n     Grade = as_factor(Grade),\n     Gender = as_factor(Gender),\n     Arith = as_factor(Arith)\n  )\nglimpse(math_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 599\nColumns: 6\n$ Age    <dbl> 1378, 1407, 1379, 1428, 1356, 1350, 1336, 1393, 1317, 1348, 141…\n$ Gender <fct> Boy, Boy, Girl, Girl, Boy, Girl, Boy, Boy, Girl, Boy, Boy, Boy,…\n$ Grade  <fct> Secondary, Secondary, Secondary, Secondary, Secondary, Secondar…\n$ AMAS   <dbl> 9, 18, 23, 19, 23, 27, 22, 17, 28, 20, 16, 20, 21, 36, 16, 27, …\n$ RCMAS  <dbl> 20, 8, 26, 18, 20, 33, 23, 11, 32, 30, 10, 4, 23, 26, 24, 21, 3…\n$ Arith  <fct> 6, 6, 5, 7, 1, 1, 4, 7, 2, 6, 2, 5, 2, 6, 2, 7, 2, 4, 7, 3, 8, …\n```\n\n\n:::\n:::\n\n\n\nModified Glimpse:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(math_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 599\nColumns: 6\n$ Age    <dbl> 1378, 1407, 1379, 1428, 1356, 1350, 1336, 1393, 1317, 1348, 141…\n$ Gender <fct> Boy, Boy, Girl, Girl, Boy, Girl, Boy, Boy, Girl, Boy, Boy, Boy,…\n$ Grade  <fct> Secondary, Secondary, Secondary, Secondary, Secondary, Secondar…\n$ AMAS   <dbl> 9, 18, 23, 19, 23, 27, 22, 17, 28, 20, 16, 20, 21, 36, 16, 27, …\n$ RCMAS  <dbl> 20, 8, 26, 18, 20, 33, 23, 11, 32, 30, 10, 4, 23, 26, 24, 21, 3…\n$ Arith  <fct> 6, 6, 5, 7, 1, 1, 4, 7, 2, 6, 2, 5, 2, 6, 2, 7, 2, 4, 7, 3, 8, …\n```\n\n\n:::\n:::\n\n\n\nModified Inspect:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(math_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n    name  class levels   n missing\n1 Gender factor      2 599       0\n2  Grade factor      2 599       0\n3  Arith factor      9 599       0\n                                   distribution\n1 Boy (53.9%), Girl (46.1%)                    \n2 Primary (66.9%), Secondary (33.1%)           \n3 7 (18.7%), 6 (18.2%), 8 (15.7%) ...          \n\nquantitative variables:  \n   name   class min     Q1 median     Q3  max       mean         sd   n missing\n1   Age numeric  37 1061.5   1208 1418.5 1875 1246.49249 223.112183 599       0\n2  AMAS numeric   4   18.0     22   26.5   45   21.98164   6.597962 599       0\n3 RCMAS numeric   1   14.0     19   25.0   41   19.24040   7.566802 599       0\n```\n\n\n:::\n:::\n\n\n\nModified Skim:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(math_modified)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |              |\n|:------------------------|:-------------|\n|Name                     |math_modified |\n|Number of rows           |599           |\n|Number of columns        |6             |\n|_______________________  |              |\n|Column type frequency:   |              |\n|factor                   |3             |\n|numeric                  |3             |\n|________________________ |              |\n|Group variables          |None          |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                   |\n|:-------------|---------:|-------------:|:-------|--------:|:----------------------------|\n|Gender        |         0|             1|FALSE   |        2|Boy: 323, Gir: 276           |\n|Grade         |         0|             1|FALSE   |        2|Pri: 401, Sec: 198           |\n|Arith         |         0|             1|FALSE   |        9|7: 112, 6: 109, 8: 94, 5: 93 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|     sd| p0|    p25|  p50|    p75| p100|hist  |\n|:-------------|---------:|-------------:|-------:|------:|--:|------:|----:|------:|----:|:-----|\n|Age           |         0|             1| 1246.49| 223.11| 37| 1061.5| 1208| 1418.5| 1875|▁▁▇▇▃ |\n|AMAS          |         0|             1|   21.98|   6.60|  4|   18.0|   22|   26.5|   45|▂▆▇▃▁ |\n|RCMAS         |         0|             1|   19.24|   7.57|  1|   14.0|   19|   25.0|   41|▂▇▇▅▁ |\n\n\n:::\n:::\n\n\n\nMean value of the Anxiety in Boys and Girls in Primary and Secondary school\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety %>% group_by(Gender) %>% summarize(mean_anx1 = mean(AMAS), mean_anx2 = mean(RCMAS), count =n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  Gender mean_anx1 mean_anx2 count\n  <chr>      <dbl>     <dbl> <int>\n1 Boy         21.2      18.1   323\n2 Girl        22.9      20.6   276\n```\n\n\n:::\n:::\n\n\n\n> Calculating Anxiety by grouping Gender and Grade:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety %>% group_by(Gender,Grade) %>% summarize(mean_anx1 = mean(AMAS), mean_anx2 = mean(RCMAS), count =n())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Gender'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n# Groups:   Gender [2]\n  Gender Grade     mean_anx1 mean_anx2 count\n  <chr>  <chr>         <dbl>     <dbl> <int>\n1 Boy    Primary        20.9      18.6   199\n2 Boy    Secondary      21.5      17.4   124\n3 Girl   Primary        22.7      20.6   202\n4 Girl   Secondary      23.5      20.3    74\n```\n\n\n:::\n:::\n\n\n\n> Calculating Anxiety by grouping Gender, Grade and Arith:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_anxiety %>% group_by(Gender,Grade, Arith) %>% summarize(mean_anx1 = mean(AMAS), mean_anx2 = mean(RCMAS), count =n())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Gender', 'Grade'. You can override using\nthe `.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 36 × 6\n# Groups:   Gender, Grade [4]\n   Gender Grade     Arith mean_anx1 mean_anx2 count\n   <chr>  <chr>     <dbl>     <dbl>     <dbl> <int>\n 1 Boy    Primary       0      25        19       1\n 2 Boy    Primary       1      19.2      20.3     6\n 3 Boy    Primary       2      25.7      26.7     3\n 4 Boy    Primary       3      23.4      17.9    11\n 5 Boy    Primary       4      20.2      21.2    20\n 6 Boy    Primary       5      20.6      19.2    32\n 7 Boy    Primary       6      20.3      17.6    41\n 8 Boy    Primary       7      22.1      18.5    42\n 9 Boy    Primary       8      20.3      17.2    43\n10 Boy    Secondary     0      23.4      21.6     8\n# ℹ 26 more rows\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}