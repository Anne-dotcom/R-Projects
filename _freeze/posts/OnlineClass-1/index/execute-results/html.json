{
  "hash": "2496484fa2995d5a434ba1279d230812",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Online-Class-1-Space\"\nauthor: \"Anusha\"\n---\n\n\n\n# Space\n\n## Introduction\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tmap)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(osmdata)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\nlibrary(ggformula)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n\tlearnr::run_tutorial(\"introduction\", package = \"ggformula\")\n\tlearnr::run_tutorial(\"refining\", package = \"ggformula\")\n```\n\n\n:::\n:::\n\n\n\n### Kinds of Geospatial Data\n\n-   Point: Buildings, offices, venues,etc.\n\n-   LineString: Roads, rivers, railways, etc.\n\n-   Polygon: Lake, golf course, border of a country\n\n-   MultiPolygon: Any non-contiguous set of area\n\nEach cell contains a shape (polygon) for a map.\n\n### Introduction to Maps\n\nSteps in making maps:\n\n1.  Search for an area of interest.\n2.  Learn how to access spatial/map data using osmdata\n3.  Plot and dress up our map using ggplot and tmap.\n\n**Step 1: Specifying an area**\n\n-   Locate the place of interest using the search box.\n\nbbox: Bounding Box is a rectangular area you are interested in.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbbox_1 <- matrix(\n  c(77.574028, 12.917262, 77.595073, 12.939895),\n  byrow = FALSE,\n  nrow = 2,\n  ncol = 2,\n  dimnames = list(c('x', 'y'), c('min', 'max'))\n)\nbbox_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       min      max\nx 77.57403 77.59507\ny 12.91726 12.93989\n```\n\n\n:::\n:::\n\n\n\n-\\> Using a place name to look up a Bounding Box with osmdata::getbb. This may not always work if the place name is well known.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbbox_2 <- osmdata::getbb(\"Jayanagar, Bangalore, India\")\nbbox_2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       min      max\nx 77.58528 77.58929\ny 12.93650 12.94369\n```\n\n\n:::\n:::\n\n\n\n**Step 2: Get Map Data**\n\nOpenStreetMap (OSM) provides maps of the world mostly created by volunteers.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlocations <- \n  osmdata::opq(bbox = bbox_2) %>% \n  osmdata::add_osm_feature(key = \"amenity\", \n                           value = c(\"restaurant\", \"atm\", \"college\")) %>% \n  osmdata_sf() %>%  # Convert to Simple Features format\n  purrr::pluck(\"osm_points\") # Pull out the data frame of interest\n\n# Get all buildings within my bbox\ndat_buildings <-\n  osmdata::opq(bbox = bbox_2) %>% \n  osmdata::add_osm_feature(key = \"building\") %>% \n  osmdata_sf() %>% \n  purrr::pluck(\"osm_polygons\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(locations)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nClasses 'sf' and 'data.frame':\t0 obs. of  2 variables:\n $ osm_id  : chr \n $ geometry:sfc_POINT of length 0 - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA\n  ..- attr(*, \"names\")= chr \"osm_id\"\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(dat_buildings)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nClasses 'sf' and 'data.frame':\t551 obs. of  10 variables:\n $ osm_id         : chr  \"309506831\" \"309506832\" \"309506833\" \"333080068\" ...\n $ name           : chr  NA NA NA \"OYO Hotel Fiesta Grand\" ...\n $ addr:city      : chr  NA NA NA NA ...\n $ addr:street    : chr  NA NA NA NA ...\n $ amenity        : chr  NA NA NA NA ...\n $ building       : chr  \"yes\" \"yes\" \"yes\" \"commercial\" ...\n $ building:levels: chr  NA NA NA NA ...\n $ man_made       : chr  NA NA NA NA ...\n $ name:kn        : chr  NA NA NA NA ...\n $ geometry       :sfc_POLYGON of length 551; first list element: List of 1\n  ..$ : num [1:5, 1:2] 77.6 77.6 77.6 77.6 77.6 ...\n  .. ..- attr(*, \"dimnames\")=List of 2\n  .. .. ..$ : chr [1:5] \"3148538750\" \"3148538751\" \"3148538752\" \"3148538753\" ...\n  .. .. ..$ : chr [1:2] \"lon\" \"lat\"\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA\n  ..- attr(*, \"names\")= chr [1:9] \"osm_id\" \"name\" \"addr:city\" \"addr:street\" ...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = locations, fill = \"gold\", color = \"grey\", linewidth = 0.025)+    # POLYGONS\n  geom_sf(data = dat_buildings, fill = \"purple\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}