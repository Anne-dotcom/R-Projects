---
title: "Day-4(Quantities)"
author: Anusha
order: 4
---

## *Day-4 (Quantities)*

```{r}
#| label: setup
library(tidyverse)
library(mosaic)
library(ggformula)
library(skimr)
library(crosstable)
```

```{r}
diamonds
```

```{r}
glimpse(diamonds)
```

```{r}
inspect(diamonds)
```

```{r}
skim(diamonds)
```

#### Histograms

> What is the distribution of the target variable price?

```{r}
gf_histogram(~price, data = diamonds) %>%
  gf_labs(
    title = "Plot 1A: Diamond Prices",
    caption = "ggformula") %>% 
  gf_refine(scale_fill_manual(values = c("pink"))) 
```

```{r}
gf_histogram(~price,
  data = diamonds,
  bins = 100,
  fill = "violet"
) %>%
  gf_labs(
    title = "Plot 1B: Diamond Prices",
    caption = "ggformula"
  )
```

> **Carats**
>
> What is the distribution of the predictor variable carat?

```{r}
diamonds %>%
  gf_histogram(~carat) %>%
  gf_labs(
    title = "Plot 2A: Carats of Diamonds",
    caption = "ggformula"
  )
```

```{r}
diamonds %>%
  gf_histogram(~carat,
    bins = 100
  ) %>%
  gf_labs(
    title = "Plot 2B: Carats of Diamonds",
    caption = "ggformula"
  )
```

> **Cut**
>
> Does a price distribution vary based upon type of cut, clarity and color?

```{r}
gf_histogram(~price, fill = ~cut, data = diamonds) %>%
  gf_labs(title = "Plot 3A: Diamond Prices", caption = "ggformula")
```

```{r}
diamonds %>%
  gf_histogram(~price, fill = ~cut, color = "black", alpha = 0.3) %>%
  gf_labs(
    title = "Plot 3B: Prices by Cut",
    caption = "ggformula"
  )
```

```{r}
diamonds %>%
  gf_histogram(~price, fill = ~cut, color = "black", alpha = 0.3) %>%
  gf_facet_wrap(~cut) %>%
  gf_labs(
    title = "Plot 3C: Prices by Filled and Facetted by Cut",
    caption = "ggformula"
  ) %>%
  gf_theme(theme(
    axis.text.x = element_text(
      angle = 45,
      hjust = 1
    )
  ))
```

```{r}
diamonds %>%
  gf_histogram(~price, fill = ~cut, color = "black", alpha = 0.4) %>%
  gf_facet_wrap(~cut, scales = "free_y", nrow = 2) %>%
  gf_labs(
    title = "Plot 3D: Prices Filled and Facetted by Cut",
    subtitle = "Free y-scale",
    caption = "ggformula"
  ) %>%
  gf_theme(theme(
    axis.text.x =
      element_text(
        angle = 45,
        hjust = 1
      )
  ))
```

> -   In conclusion, we can infer that the cut doesn't necessarily affect the price of the diamonds. The price depends on other factors.

```{r}

```

### Case Study 2 - Race

```{r}
race_df <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/race.csv")
rank_df <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv")
```

```{r}
glimpse(race_df)
```

```{r}
glimpse(rank_df)
```

```{r}
```

```{r}
race_df %>%
  favstats(~distance, data = .)
```

```{r}
race_df %>%
  favstats(~participants, data = .)
```

```{r}
rank_df %>%
  drop_na() %>%
  favstats(time_in_seconds ~ gender, data = .)
```

```{r}
crosstable(time_in_seconds + age ~ gender, data = rank_df) %>%
  crosstable::as_flextable()
```

##### Questions

> Max.Races and participants
>
> > Which countries host the maximum number of races? Which countries send the maximum number of participants??

```{r}
race_df %>%
  count(country) %>%
  arrange(desc(n))
```

```{r}
rank_df %>%
  count(nationality) %>%
  arrange(desc(n))
```

> Max. Winners
>
> > Which countries have the maximum number of winners (top 3 ranks)?

```{r}
rank_df %>%
  filter(rank %in% c(1, 2, 3)) %>%
  count(nationality) %>%
  arrange(desc(n))
```

> Which countries have the most top three finishes?
>
> > Which countries have had the most top-3 finishes in the **longest** distance race?

```{r}
longest_races <- race_df %>%
  slice_max(n = 5, order_by = distance) # Longest distance races
longest_races
longest_races %>%
  left_join(., rank_df, by = "race_year_id") %>% # total participants in longest 4 races
  filter(rank %in% c(1:10)) %>% # Top 10 ranks
  count(nationality) %>%
  arrange(desc(n))
```

> What is the distribution of the finishing times?
>
> > What is the distribution of the finishing times, across all races and all ranks?

```{r}
rank_df %>%
  gf_histogram(~time_in_seconds, bins = 75, fill = "pink", alpha = 1.2) %>%
  gf_labs(title = "Histogram of Race Times") 
```

> What is the distribution of race distances?
>
> > What is the distribution of race distances?

```{r}
race_df %>%
  gf_histogram(~distance, bins = 50, fill = "pink", alpha = 1.2) %>%
  gf_labs(title = "Histogram of Race Distances")
```

```{r}
race_df %>%
  filter(distance == 0)
```

> What is the distribution of finishing times for race distance around 150?
>
> > For all races that have a distance around 150, what is the distribution of finishing times? Can these be split/facetted using `start_time` of the race (i.e.Â morning / evening) ?

```{r}
race_times <- race_df %>%
  count(start_time) %>%
  arrange(desc(n))
race_times
```

```{r}
race_start_factor <- race_df %>%
  filter(distance == 0) %>% # Races that actually took place
  mutate(
    start_day_time =
      case_when(
        start_time > hms("02:00:00") &
          start_time <= hms("06:00:00") ~ "early_morning",
        start_time > hms("06:00:01") &
          start_time <= hms("10:00:00") ~ "late_morning",
        start_time > hms("10:00:01") &
          start_time <= hms("14:00:00") ~ "mid_day",
        start_time > hms("14:00:01") &
          start_time <= hms("18:00:00") ~ "afternoon",
        start_time > hms("18:00:01") &
          start_time <= hms("22:00:00") ~ "evening",
        start_time > hms("22:00:01") &
          start_time <= hms("23:59:59") ~ "night",
        start_time >= hms("00:00:00") &
          start_time <= hms("02:00:00") ~ "postmidnight",
        .default = "other"
      )
  ) %>%
  mutate(
    start_day_time =
      as_factor(start_day_time) %>%
        fct_collapse(
          .f = .,
          night = c("night", "postmidnight")
        )
  )
##
# Join with rank_df
race_start_factor %>%
  left_join(rank_df, by = "race_year_id") %>%
  drop_na(time_in_seconds) %>%
  gf_histogram(
    ~time_in_seconds,
    bins = 75,
    fill = ~start_day_time,
    color = ~start_day_time,
    alpha = 0.5
  ) %>%
  gf_facet_wrap(vars(start_day_time), ncol = 2, scales = "free_y") %>%
  gf_labs(title = "Race Times by Start-Time")
```

### Populations Data (Cast study 3)

```{r}
pop <- read_delim(file = "../../Data/populations.csv", delim = "," )
pop

```

```{r}
inspect(pop)
```

> **Histograms**

```{r}
gf_histogram(~value, data = pop, title = "Long Tailed Histogram", fill = "navy", alpha = 1.3, bins = 100)

gf_density(~value, data = pop, title = "Long Tailed Density", fill = "navy", alpha = 1.3, bins = 100)
```

```{r}
gf_histogram(~ log10(value), data = pop, title = "Histogram with Log transformed x-variable",  fill = "navy", alpha = 1.3, bins = 100)
##
gf_density(~ log10(value), data = pop, title = "Density with Log transformed x-variable",  fill = "navy", alpha = 1.3, bins = 100)
```

### Experimentation with different data sets.

-   Importing a csv file based on Wages and Education.

```{r}
WE <- read_delim(file = "../../Data/SLID.csv", delim = "," )
WE
```

```{r}
inspect(WE)
```

```{r}
glimpse(WE)
```

```{r}
WE_modified <- WE %>% 
  dplyr::mutate(
    sex = as_factor(sex),
    language = as_factor(language)
  )
glimpse(WE_modified)
```

#### What are the number of people with higher and lower wages?

```{r}
gf_histogram(~wages, data = WE_modified, bins = 100, fill = "pink", alpha = 1.3, color = "black") %>%
  gf_labs(
    title = "Plot 1A: Wages",
    caption = "ggformula"
  )
```

-   We can infer that people within the range of 0-20 of wages are higher.

### Which sex has a higher wage?

```{r}
gf_histogram(~wages, data = WE_modified, bins = 100, fill = ~ sex, alpha = 1.3, color = "black") %>%
  gf_labs(
    title = "Plot 1B: Wages & Sex",
    caption = "ggformula"
  )
```

```{r}
gf_histogram(~wages, data = WE_modified, bins = 100, fill = ~ sex, alpha = 1.3, color = "black", position = "fill") %>%
  gf_labs(
    title = "Plot 1B: Wages & Sex",
    caption = "ggformula"
  )
```

-   We can infer

```{r}
gf_histogram(~wages, data = WE_modified, bins = 100, fill = ~ language, alpha = 1.3, color = "black") %>%
  gf_labs(
    title = "Plot 1C: Wages & Lnguages",
    caption = "ggformula"
  )
```

```{r}
gf_histogram(~wages, data = WE_modified, bins = 100, fill = ~ language, alpha = 0.7, color = "black", position = "fill") %>%
  gf_labs(
    title = "Plot 1D: Wages & Languages",
    caption = "ggformula"
  )
```

-   We can infer that language play an important role in wages offered. English speaking people have predominantly higher wages, which could also be as a result of the fact that major jobs require English.

```{r}
gf_histogram(~wages, data = WE_modified, 
             fill = ~ language, 
             alpha = 0.7, 
             color = "black" 
             ) %>%
  gf_facet_wrap(~language) %>%
  gf_labs(
    title = "Plot 1D: Wages & Languages",
    caption = "ggformula"
  ) %>% 
   gf_theme(theme(
    axis.text.x = element_text(
      angle = 45,
      hjust = 1
    )
  ))
```

```{r}
WE_modified %>%
  group_by(language) %>%
  summarize(average_wage = mean(wages, na.rm=TRUE), count = n())
```

-   We can infer from this that, English speaking people get more jobs, but the average wage for people speaking each language is similar.

```{r}
WE_modified %>%
  group_by(sex) %>%
  summarize(average_wage = mean(wages, na.rm=TRUE), count = n())
```

-   We can infer that males have higher wages, which could also be because of more job opportunities for men then women.
